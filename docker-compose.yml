# Common configuration for Airflow services
x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  image: local-weathercast-airflow:latest
  environment: &airflow-common-env
    - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
    - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    - AIRFLOW__CORE__LOAD_EXAMPLES=false
    - AIRFLOW__WEBSERVER__SECRET_KEY=your-secret-key-here
    - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - AWS_REGION=${AWS_REGION}
    - AWS_S3_BUCKET=${AWS_S3_BUCKET}
    - DB_HOST=${DB_HOST}
    - DB_NAME=${DB_NAME}
    - DB_USER=${DB_USER}
    - DB_PASS=${DB_PASS}
    - DB_PORT=${DB_PORT}
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./dataset:/opt/airflow/dataset
    - ./.env:/opt/airflow/.env
    # - ./dashboard:/opt/airflow/dashboard
  user: "${AIRFLOW_UID:-50000}:0"

services:
  redis:
    image: redis:latest
    container_name: airflow-redis
    ports:
      - "6379:6379"

  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    depends_on:
      - postgres
    command: >
      bash -c "
        airflow db init &&
        airflow db upgrade &&
        airflow users create --username admin --password admin --firstname admin --lastname admin --role Admin --email vloyer@usc.edu
      "

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
      # - "8501:8501"
    command: airflow webserver
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
    command: airflow scheduler
    restart: always

  airflow-worker:
    <<: *airflow-common
    container_name: airflow-worker
    depends_on:
      - airflow-scheduler
      - redis
    command: airflow celery worker
    restart: always
